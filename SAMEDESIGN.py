import telebot
from telebot import types
import re

token = ('5612181357:AAELwoHnlUrrmJy-al1LtS685Lzg9GcEqpg')     ####
bot = telebot.TeleBot(token)
chat_id = ('1465233793')        ####
#chat_id = ('-810293417')       ####
isorder = bool()
admin_ = (1465233793)
persons_ = [admin_, 985903973, 932623200, 1359616488] #person
isperson = bool()
banlist = [] #banned
isbanned = bool()
orderer = bool()
unban = str()
a = int()
s = str()
language = bool(False) # false = rus, true = eng

ban_vid = open('C:/Users/–°—Ç–∞—Å/source/repos/SAMEDESIGN/SAMEDESIGN/ban.mp4', 'rb')

info_text = str()
info_text_rus = (str(f'<i>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è.</i>\n\nSAME Design studio\n<b>–¥–∏–∑–∞–π–Ω–µ—Ä @samexwetus\n—Ö—É–¥–æ–∂–Ω–∏–∫ @brrrusher\n–≤–µ—Ä—Å—Ç–∞–ª—å—â–∏–∫/–∫–æ–¥–µ—Ä @egorgalysko</b>\n<b>–≤–ª–∞–¥–µ–ª–µ—Ü –±–æ—Ç–∞ @kraikos</b>\n\n<b>-–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ</b> https://t.me/+4slIEtdaVx42MmE6 \n<b>-–û—Ç–∑—ã–≤—ã –Ω–∞ LOLZ</b> https://zelenka.guru/threads/4443292/#post-34466943'))
info_text_eng = (str(f'<i>Information.</i>\n\nSAME Design studio\n<b>designer @samexwetus\npainter @brrrusher\nwebsite layout @egorgalysko</b>\n<b>bot owner @kraikos</b>\n\n<b>-Portfolio</b> https://t.me/+4slIEtdaVx42MmE6 \n<b>-Feedback on LOLZ</b> https://zelenka.guru/threads/4443292/#post-34466943'))

order_text = str()
order_text_rus = (str(f'<i>–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞.</i> \n\n–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –≤–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ <b>–ø—Ä–∞–≤–∏–ª–∞:</b> \n\n-–í —Å–∞–º–æ–º –Ω–∞—á–∞–ª–µ –∑–∞–∫–∞–∑–∞ –Ω–∞–ø–∏—à–∏—Ç–µ <b>/order</b> \n–ù–∞–ø–∏—à–∏—Ç–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ <b>–¢–ó</b>(—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ/—Å—É—Ç—å –∑–∞–∫–∞–∑–∞) \n\n-–í —Å–ª—É—á–∞–µ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ <b>–∑–∞–∫–∞–∑ –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è!</b> \n–í —Å–ª—É—á–∞–µ <b>–Ω–µ–∞–¥–µ–∫–≤–∞—Ç–Ω–æ–≥–æ</b>–ø–æ–≤–µ–¥–µ–Ω–∏—è (–Ω–µ—Ü–µ–Ω–∑—É—Ä–Ω–∞—è –±—Ä–∞–Ω—å, —Å–ø–∞–º) –≤—ã –±—É–¥–µ—Ç–µ <b>–∑–∞–±–∞–Ω–µ–Ω—ã.</b>'))
order_text_eng = (str(f'<i>Making an order.</i> \n\nMaking an order includes some <b>rules:</b> \n\n-At the beginning write <b>/order</b> \n-Write a main <b>task</b> (order description) \n\n-In case of incorrectly filled information  <b>the order will not accepted!</b> \n-In case of <b>unacceptable</b> behaviour (profanity, spam), you will be <b>banned.</b>'))

fin_text = str()
fin_text_rus = (str(f'‚úÖ –ó–∞–∫–∞–∑ <b>—É—Å–ø–µ—à–Ω–æ</b> –æ—Ñ–æ—Ä–º–ª–µ–Ω. –° –í–∞–º–∏ <b>—Å–∫–æ—Ä–æ —Å–≤—è–∂—É—Ç—Å—è</b>.'))
fin_text_eng = (str(f'‚úÖ The order has <b>succesfully</b> placed. We will <b>contact with you soon</b>.'))

mainm_text = str()
mainm_text_rus = (str(f'<i>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.</i>\n<b>–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ:</b>\n\n  <b>-–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ —É —Å—Ç—É–¥–∏–∏ SAME Design</b>\n  <b>-–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é/–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤</b>'))
mainm_text_eng = (str(f'<i>Main menu.</i>\n<b>There you can:</b>\n\n  <b>-Place an order by SAME Design studio</b>\n  <b>-Check information/Leave a feedback</b>'))

texts_rus = [f'–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑', f'–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', f'–ù–∞–∑–∞–¥', f'–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å <u>–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–º –ª–∏—Ü–æ–º</u>', f'–í—ã –±—ã–ª–∏ </b>–∑–∞–±–∞–Ω–µ–Ω—ã<b>', f'Change the language', '@']
texts_eng = [f'Place an order', f'Information', f'Back', f'You are not <u>an authorized person.</u>', f'You has been <b>banned</b>', f'–°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫', '@']

texts = str([])

def rus():   
    info_text = info_text_rus
    order_text = order_text_rus
    fin_text = fin_text_rus
    mainm_text = mainm_text_rus
    texts = texts_rus

def eng():
    info_text = info_text_eng
    order_text = order_text_eng
    fin_text = fin_text_eng
    mainm_text = mainm_text_eng
    texts = texts_eng

info_text = info_text_rus
order_text = order_text_rus
fin_text = fin_text_rus
mainm_text = mainm_text_rus 
texts = texts_rus

#–±–∞—Ç–æ–Ω—ã
rus()
markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
button0 = types.KeyboardButton(texts[0])
button1 = types.KeyboardButton(texts[1])
#button2 = types.KeyboardButton(texts[5])
markup.add(button0, button1)

remove = telebot.types.ReplyKeyboardRemove()

cancel = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width = 1)
button2 = types.KeyboardButton(texts[2])
cancel.add(button2)

#—Ñ—É–Ω–∫—Ü–∏–∏

def initb():
    global a
    global banlist
    a = banlist.count('/ban')
    while not(a == 0):
        banlist.remove('/ban')
        a = a - 1
    
    a = 0

    while not(a == len(banlist)):

        banlist[a] = re.sub('[/|b|a|n| ]', '', banlist[a])
        a = a + 1
        if a == len(banlist):
            banlist = list(set(banlist))

@bot.message_handler(commands=['start']) #START
def start(message):
    orderer = False
    isperson = False
    isbanned = False
    start_text = (str(f'<b>–ü—Ä–∏–≤–µ—Ç {message.from_user.first_name}üëã, —ç—Ç–æ –±–æ—Ç Same Design - –∑–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ:</b>\n\n  <b>-–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ —É —Å—Ç—É–¥–∏–∏ Same Design</b>\n  <b>-–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é/–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤</b>'))
    bot.send_message (message.chat.id, start_text, parse_mode = 'html', reply_markup = markup)

def mainm(message):
    orderer = False
    isperson = False
    isbanned = False
    bot.send_message (message.chat.id, mainm_text, parse_mode = 'html', reply_markup = markup)

@bot.message_handler(commands=['ban']) #BAN
def ban(message):
    global isperson
    global banlist
    global a
    for person_ in persons_:
        if message.from_user.id == person_:
            isperson = True
            if isperson == True:
                bot.send_message(message.chat.id, '<u>–ê–∫–∫–∞—É–Ω—Ç —Å —ç—Ç–∏–º id –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.</u>', parse_mode = 'html', reply_markup = cancel)
                banlist.append(message.text)

                while not(a == len(banlist)):

                    banlist[a] = re.sub('[/|b|a|n| ]', '', banlist[a])
                    a = a + 1
                if a == len(banlist):
                    banlist = list(set(banlist))

    if isperson == False:
            bot.send_message(message.chat.id, texts[3], parse_mode = 'html')

@bot.message_handler(commands=['banlist']) #BANLIST
def banlist_1(message):
    initb()
    bot.send_message(message.chat.id,'<u>–ó–∞–±–∞–Ω–µ–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã:</u>\n' + str(banlist), parse_mode = 'html')
    if len(banlist) == 0:
        bot.send_message(message.chat.id,'<u>–ó–∞–±–∞–Ω–µ–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã:</u>\n empty', parse_mode = 'html')

@bot.message_handler(commands=['unban']) #UNBAN
def unban(message):
    initb()
    global isperson
    global banlist
    global a
    a = 0
    for person_ in persons_:
        if message.from_user.id == person_:
            isperson = True
            if isperson == True:
                unban = re.sub('[/|u|n|b|a|n| ]', '', message.text)
                if len(banlist) > 0:
                    for banned in banlist:
                        print (banned)
                        if unban == banned:
                            banlist.remove(banned)
                            bot.send_message(message.chat.id, '<u>–ê–∫–∫–∞—É–Ω—Ç —Å —ç—Ç–∏–º id —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.</u>', parse_mode = 'html', reply_markup = cancel)
                            a = a + 1
                    if a == 0:
                        bot.send_message(message.chat.id, '<u>–≠—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç—É –≤ /banlist.</u>', parse_mode = 'html', reply_markup = cancel)
                if len(banlist) == 0:
                    bot.send_message(message.chat.id, '<u>–°–ø–∏—Å–æ–∫ /banlist –ø—É—Å—Ç.</u>', parse_mode = 'html', reply_markup = cancel)

@bot.message_handler(func=lambda message: message.text == '–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑') #ORDER
def order(message):
    global isbanned
    if True:
        for banned in banlist:
            if message.from_user.id == int(banned):    #list of ban
                bot.send_message(message.chat.id, texts[4], parse_mode = 'html')
                bot.send_video(message.chat.id, ban_vid)
                isbanned = True
    if isbanned == False:
        isorder = True
        bot.send_message (message.chat.id, order_text, parse_mode = 'html', reply_markup = cancel)         

@bot.message_handler(commands=['order']) #PSYCHO
def psycho(message):
    #global orderer
    #if message.text == '/order':
        #orderer = True
        #print(orderer)
        #bot.send_message(message.chat.id, '–ò–∑–≤–∏–Ω–∏—Ç–µ, <b>–ø—É—Å—Ç—ã–µ –∑–∞–∫–∞–∑—ã –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è</b>', parse_mode = 'html', reply_markup = cancel)
    if not(message.text == '–ù–∞–∑–∞–¥' or 'Back'):
        bot.send_message (chat_id, (f'\n@{message.from_user.username}, {message.from_user.id}:\n '+ message.text, 'utf-8'), parse_mode = 'html', reply_markup = remove) 
        bot.send_message (message.chat.id, fin_text, parse_mode = 'html', reply_markup = cancel)
        isorder = False

@bot.message_handler(func=lambda message: message.text == '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è') #INFO + CANCEL
def info(message):
    isorder = False
    isperson = False
    isbanned = False
    bot.send_message (message.chat.id, info_text, parse_mode = 'html', reply_markup = cancel)

@bot.message_handler(func=lambda message: message.text == '–ù–∞–∑–∞–¥') #CANCEL
def cancel_1(message):
    isorder = False
    isperson = False
    isbanned = False
    mainm(message)

bot.polling(none_stop = True)

